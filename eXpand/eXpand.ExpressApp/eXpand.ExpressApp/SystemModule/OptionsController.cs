using System;
using System.Collections.Generic;
using System.Linq;
using DevExpress.ExpressApp;
using DevExpress.ExpressApp.Model.Core;
using eXpand.ExpressApp.Core.DynamicModel;
using DevExpress.ExpressApp.Model;

namespace eXpand.ExpressApp.SystemModule
{

    public abstract class OptionsController<TExtenderBaseInterface> : ViewController, IModelExtender where TExtenderBaseInterface:IModelNode {
        

        void IModelExtender.ExtendModelInterfaces(ModelInterfaceExtenders extenders) {
            extenders.Add(typeof(TExtenderBaseInterface), GetExtenderType());
            var modelApplicationCreatorProperties = ModuleBase.ModelApplicationCreatorProperties;
            ModelAutoGeneratedTypeCollector collector = modelApplicationCreatorProperties.AutoGeneratedTypeCollector;
            IEnumerable<DynamicModelType> dynamicModelTypes = GetDynamicModelTypes().ToList();
            foreach (var dynamicModelType in dynamicModelTypes) {
                collector.RegisterType(new ModelAutoGeneratedType(collector, dynamicModelType));
                extenders.Add(dynamicModelType.BaseType, dynamicModelType);
            }   
        }

        protected abstract Type GetExtenderType();

        protected abstract IEnumerable<DynamicModelType> GetDynamicModelTypes();

    }
}